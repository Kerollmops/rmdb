name: Rust CI

on:
  merge_group:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # RUSTFLAGS: "-D warnings"
  # RUSTDOCFLAGS: "-D warnings"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust:
          - nightly

    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@nightly
      - uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.rust }}
          command: build
      - uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.rust }}
          command: test
          args: --all-features
      - uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.rust }}
          command: test

  old_tests:
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        bins: [mtest, mtest2, mtest3, mtest4, mtest5]
        rust:
          - nightly

    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@nightly
      - uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.rust }}
          command: build
      - name: Clean and create testdb directory
        run: |
          rm -rf testdb
          mkdir testdb
      - uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.rust }}
          command: run
          args: --bin ${{ matrix.bins }}

  test-heed-integration:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust:
          - nightly

    steps:
      - name: Checkout rmdb (current repo)
        uses: actions/checkout@v4
        with:
          path: rmdb

      - name: Checkout heed
        uses: actions/checkout@v4
        with:
          repository: meilisearch/heed
          ref: tmp-adapted-for-rmdb
          path: heed

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Rename rmdb crate to lmdb-master-sys
        run: |
          cd rmdb
          sed -i 's/^name = "rmdb"/name = "lmdb-master-sys"/' Cargo.toml

      - name: Modify heed dependencies and remove unsupported features
        run: |
          cd heed/heed

          # Update lmdb-master-sys dependency to use local version
          sed -i 's/lmdb-master-sys = { [^}]* }/lmdb-master-sys = { version = "0.1.0" }/' Cargo.toml

          # Comment out unsupported features
          sed -i 's/^posix-sem = /# posix-sem = /' Cargo.toml
          sed -i 's/^mdb_idl_logn_8 = /# mdb_idl_logn_8 = /' Cargo.toml
          sed -i 's/^mdb_idl_logn_9 = /# mdb_idl_logn_9 = /' Cargo.toml
          sed -i 's/^mdb_idl_logn_10 = /# mdb_idl_logn_10 = /' Cargo.toml
          sed -i 's/^mdb_idl_logn_11 = /# mdb_idl_logn_11 = /' Cargo.toml
          sed -i 's/^mdb_idl_logn_12 = /# mdb_idl_logn_12 = /' Cargo.toml
          sed -i 's/^mdb_idl_logn_13 = /# mdb_idl_logn_13 = /' Cargo.toml
          sed -i 's/^mdb_idl_logn_14 = /# mdb_idl_logn_14 = /' Cargo.toml
          sed -i 's/^mdb_idl_logn_15 = /# mdb_idl_logn_15 = /' Cargo.toml
          sed -i 's/^mdb_idl_logn_16 = /# mdb_idl_logn_16 = /' Cargo.toml
          sed -i 's/^longer-keys = /# longer-keys = /' Cargo.toml
          sed -i 's/^use-valgrind = /# use-valgrind = /' Cargo.toml

      - name: Add patch for local lmdb-master-sys
        run: |
          cd heed
          echo "" >> Cargo.toml
          echo "[patch.crates-io]" >> Cargo.toml
          echo 'lmdb-master-sys = { path = "../rmdb" }' >> Cargo.toml

      - name: Show modified files for debugging
        run: |
          echo "=== rmdb Cargo.toml ==="
          head -10 rmdb/Cargo.toml
          echo "=== heed/heed Cargo.toml (dependencies section) ==="
          grep -A 20 "\[dependencies\]" heed/heed/Cargo.toml
          echo "=== heed Cargo.toml (patch section) ==="
          tail -5 heed/Cargo.toml

      - name: Run heed tests with rmdb
        run: |
          cd heed
          cargo test

  clippy:
      name: Ensure clippy is happy
      runs-on: ${{ matrix.rust }}
      continue-on-error: true
      steps:
        - uses: actions/checkout@v2
        - uses: dtolnay/rust-toolchain@nightly
          with:
            components: clippy
        - uses: actions-rs/cargo@v1
          with:
            toolchain: ${{ matrix.rust }}
            command: clippy
            args: --all-targets -- --deny warnings

  fmt:
      name: Ensure the project is formatted
      runs-on: macos-latest # We will need to use matrix.rust, here.
      steps:
        - uses: actions/checkout@v2
        - uses: dtolnay/rust-toolchain@nightly
          with:
            components: rustfmt
        - uses: actions-rs/cargo@v1
          with:
            toolchain: ${{ matrix.rust }}
            command: fmt
            args: --check
